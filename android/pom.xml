<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>uk.ac.cam.cl.dtg.pom</groupId>
		<artifactId>parent</artifactId>
		<version>1.0.1</version>
		<!-- Disable searching the filesystem for the parent because it doesn't 
			match our repository layout -->
		<relativePath></relativePath>
	</parent>
	<artifactId>android</artifactId>
	<name>DTG Android Parent Pom</name>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-android</artifactId>
			<version>1.6.1-RC1</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<!-- The general strategy here is that one should be able to build and run 
		from eclipse and from command-line. The eclipse build only generates debug 
		builds whereas command-line can do either. The Android plugin in eclipse 
		is the limiting factor since it offers little flexibility about where things 
		go and so we adopt an Android project layout rather than a Maven project 
		layout. The principle is that you should be able to check this project out 
		and run it without making any local mods as long as your general build environment 
		is setup as standard. When doing a debug build we add src-debug to the build 
		path which contains the source file with run-time resolved constants for 
		debug builds - this will look for config-debug/local-properties to see if 
		you have overridden anything - this file should be used if you have some 
		_local_ testing requirements which are not to be committed to the main repository. 
		Otherwise the default values are either in the src-debug files or will be 
		collected from the build environment. When building in release mode we instead 
		add src-release to the command line and then use filtering in maven to insert 
		the constants that we need. The ramifications of this are: if you are using 
		Maps then you need to programmatically create the maps component so you can 
		access the API as a constant from java -->

	<!-- Some hacks are currently in place to make this work with eclipse. The 
		big trick is to try to get m2e (the eclipse maven plugin) to automatically 
		collect the right build path settings from the pom. -->

	<!-- Hack 1: in debug mode we add config-debug/* as a resource and also 
		to the build path. The maven command line builds interpret the resource part 
		correctly and copy the contents into the APK. Eclipse doesn't get this and 
		so instead by adding config-debug to the build path the resources get copied 
		in automatically instead. In release mode the config-debug directory is ignored. 
		We can't keep local.properties in the project root directory because you 
		can't set include/excludes on a src directory setting and so you can't add 
		the project root as a src directory -->

	<build>
		<finalName>${project.artifactId}</finalName>
		<directory>${basedir}/bin</directory>
		<sourceDirectory>${basedir}/src</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>signing</id>
						<goals>
							<goal>sign</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<includes>
								<include>${project.build.directory}/${project.artifactId}.apk</include>
							</includes>
							<arguments>
								<argument>-sigalg</argument>
								<argument>MD5withRSA</argument>
								<argument>-digestalg</argument>
								<argument>SHA1</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.jayway.maven.plugins.android.generation2</groupId>
				<artifactId>android-maven-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<file>${project.build.directory}/${project.artifactId}-aligned.apk</file>
					<sdk>
						<platform>4</platform>
					</sdk>
					<undeployBeforeDeploy>true</undeployBeforeDeploy>
					<sign>
						<debug>false</debug>
					</sign>
				</configuration>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>alignApk</id>
						<phase>package</phase>
						<goals>
							<goal>zipalign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>debug</id>
			<activation>
				<property>
					<name>environment</name>
					<value>!release</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>uk.ac.cam.cl.dtg.compilesettingsloader</groupId>
					<artifactId>CompileSettingsLoader</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<resources>
					<resource>
						<directory>${basedir}/config-debug</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>add-source</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${basedir}/config-debug</source>
										<source>${basedir}/src-debug</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<configuration>
							<keystore>${android.debug.keystore}</keystore>
							<alias>${android.debug.keyalias}</alias>
							<storepass>${android.debug.storepass}</storepass>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>add-source</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${basedir}/src-release</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.jayway.maven.plugins.android.generation2</groupId>
						<artifactId>android-maven-plugin</artifactId>
						<version>3.1.1</version>
						<configuration>
							<manifest>
								<debuggable>false</debuggable>
								<versionCodeAutoIncrement>false</versionCodeAutoIncrement>
							</manifest>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<configuration>
							<keystore>${release.keystore}</keystore>
							<alias>${release.keyalias}</alias>
							<storepass>${storepass}</storepass>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
